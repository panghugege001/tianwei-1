<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
     
	<!-- 对init.properties加密解密过程 -->
	<bean id="environmentVariablesConfiguration" class="com.gsmc.png.security.SpecialEnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="password" value="ComoneBaby" />
	</bean>

	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="environmentVariablesConfiguration" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="locations">
			<list>
				<value>classpath:init.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
 
 <!--读写源数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxActive" value="500" />
		<property name="maxIdle" value="200" />
		<property name="maxWait" value="1000" />
		<property name="initialSize" value="20" />
		<property name="defaultAutoCommit" value="true" />
		<property name="validationQuery" value="select 1"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="60"/>
		<property name="logAbandoned" value="true"/>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
        </prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
        </prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
        </prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
        </prop>
        		<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		

		<property name="annotatedClasses">
			<list>
				<value>com.gsmc.png.model.PNGDataDY</value>
				<value>com.gsmc.png.model.MgData</value>
				<value>com.gsmc.png.model.BbinData</value>
				<value>com.gsmc.png.model.SwData</value>
				<value>com.gsmc.png.model.PlatformData</value>
				<value>com.gsmc.png.model.AgData</value>
				<value>com.gsmc.png.model.CqData</value>
				<value>com.gsmc.png.model.PgData</value>
			</list>
		</property>
	</bean>
	
	

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- the transactional advice -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- all methods starting with get are read-only -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<!-- other methods will get the default transaction settings -->
			<tx:method name="*" rollback-for="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="allservices"
			expression="execution(* com.gsmc.png.service.interfaces.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allservices" />
	</aop:config>
	
	<bean id="springContextHelper" class="com.gsmc.png.utils.SpringContextHelper"></bean>

	<import resource="applicationContext-png-action.xml" />
	<import resource="applicationContext-png-service.xml" />
	<import resource="applicationContext-png-dao.xml" />
	<import resource="applicationContext-quartz.xml" />
</beans>
